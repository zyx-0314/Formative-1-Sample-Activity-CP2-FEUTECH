// 4 Fundamentals
// Function -> Passing by Ref
// struct
// array

#include <iostream>
#include <cctype>

using namespace std;

struct ControlValues {
    int result = 0, val1 = 0, val2 = 0, id = 0;
    string mathEquationName = "";
    
    void Result()
    {
        cout << this->mathEquationName << " of " << this->val1 << " and " << this->val2 << " is equal to " << this->result << "\n";
    }
};

struct History {
    ControlValues value[10];
    
    void AddHistory(int id, ControlValues value) {
        this->value[id] = value;
        this->value[id].id = id;
    }
    
    void CheckHistory(int counter) {
        
        cout << "--- History ---\n";
        if (counter == 0) 
            cout << " No Data Yet \n";
        else
            for (int i = 0; i < counter; i++)
            {
                cout << i+1 << ": ";
                this->value[i].Result();
            }
    }
};

void MainMenu(int&);
void MathMenu(int&);
void Input(int, int&);
void InputState(ControlValues&);

int main() {
    int mathChoice, counter = 0, choice;
    History history;
    string loopChoice;
    ControlValues variables;
    
    do {
        MainMenu(choice);
        
        if (choice == 0) break;
        
        if (choice == 1) {
            do {
                MathMenu(mathChoice);
        
                if (choice == 0) break;
                
                InputState(variables);
                
                switch(mathChoice) {
                case 1:
                    variables.mathEquationName = "Addition";
                    variables.result = variables.val1 + variables.val2;
                    break;
                case 2:
                    variables.mathEquationName = "Subtraction";
                    variables.result = variables.val1 - variables.val2;
                    break;
                case 3:
                    variables.mathEquationName = "Multiplication";
                    variables.result = variables.val1 * variables.val2;
                    break;
                case 4:
                    while (variables.val2 == 0) {
                        cout << "Condition is not valid!";
                        system("pause");
                        system("cls");
                        
                        InputState(variables);
                    }
        
                    variables.mathEquationName = "Division";
                    variables.result = variables.val1 / variables.val2;
                    break;
                case 5:
                    variables.mathEquationName = "Modulo";
                    variables.result = variables.val1 % variables.val2;
                    break;
                }
                
                variables.Result();
                
                history.AddHistory(counter, variables);
                cout << "Test: " << history.value[counter].mathEquationName << "\n\n";
                counter++;
                
                cout 
                    << "Do you want to do another go: [Y/N]\n"
                    << ">> ";
                cin >> loopChoice;
            } while(tolower(loopChoice[0] == 'y') );
        } else {
            history.CheckHistory(counter);
        }
    } while(true);

    system("cls");
    cout << "Thank you for using the system!";
    
}

void MainMenu(int& choice){
    do {
        cout
            << "--- Main Menu ---\n" 
            << "1. Math Equation\n"
            << "2. History\n"
            << "0. Exit\n"
            << "\n"
            << ">> ";
        cin >> choice;
    } while (choice < 0 || choice > 2);
}

void MathMenu (int & choice){
    do {
        cout
            << "--- Math Menu ---\n" 
            << "1. Add\n"
            << "2. Subtraction\n"
            << "3. Multiplication\n"
            << "4. Division\n"
            << "5. Modulus\n"
            << "0. Back\n"
            << "\n"
            << ">> ";
        cin >> choice;
    } while (choice < 0 || choice > 5);
}

void Input(int indicator, int & val){
    cout << "Input value " << indicator + 1 << ":";
    cin >> val;
}

void InputState(ControlValues & data) {
    for (int i = 0; i < 2; i++)
        i == 0 ? Input(i, data.val1) : Input(i, data.val2);
}
